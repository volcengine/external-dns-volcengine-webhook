name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Extract version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:v${{ env.VERSION }} .
          docker tag ghcr.io/${{ github.repository }}:v${{ env.VERSION }} ghcr.io/${{ github.repository }}:v${{ env.MAJOR_MINOR }}
          docker push ghcr.io/${{ github.repository }}:v${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository }}:v${{ env.MAJOR_MINOR }}

      - name: Create or Update GitHub Release
        run: |
          # Check if release already exists
          if gh release view ${{ github.ref_name }} &>/dev/null; then
            echo "Release already exists, skipping creation"
          else
            echo "Creating new release"
            gh release create ${{ github.ref_name }} --generate-notes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}