apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "external-dns.labels" . | nindent 4 }}
    k8s-app: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "external-dns.labels" . | nindent 8 }}
        k8s-app: {{ .Release.Name }}
    spec:
      {{- with.Values.userConfig.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "external-dns.serviceAccountName" . }}
      {{- with.Values.userConfig.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: controller
        image: {{ .Values.publicConfig.image.controller.repository }}:{{ .Values.publicConfig.image.controller.tag }}
        args:
        - --provider=webhook
        - --log-level={{ .Values.userConfig.args.controller.logLevel }}
        {{- range .Values.userConfig.args.controller.sources }}
        - --source={{ . }}
        {{- end }}
        - --interval={{ .Values.userConfig.args.controller.interval }}
        - --policy={{ .Values.userConfig.args.controller.policy }}
        {{- range .Values.userConfig.args.controller.domainFilters }}
        - --domain-filter={{ . }}
        {{- end }}
        {{- if .Values.labelFilter }}
        - --label-filter={{ .Values.userConfig.args.controller.labelFilter }}
        {{- end }}
        - --registry={{ .Values.userConfig.args.controller.registry }}
        {{- if .Values.userConfig.args.controller.txtOwnerId }}
        - --txt-owner-id={{.Values.userConfig.args.controller.txtOwnerId }}
        {{- end }}
        {{- if.Values.userConfig.args.controller.txtPrefix }}
        - --txt-prefix={{.Values.userConfig.args.controller.txtPrefix }}
        {{- end }}
        resources:
          limits:
            memory: {{ .Values.userConfig.Resources.controller.Limits.Memory }}
            cpu: {{ .Values.userConfig.Resources.controller.Limits.Cpu }}
          requests:
            cpu: {{ .Values.userConfig.Resources.controller.Requests.Cpu }}
            memory: {{ .Values.userConfig.Resources.controller.Requests.Memory }}
        ports:
        - name: http
          containerPort: 7979
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
      - name: provider
        image: {{ .Values.publicConfig.image.provider.repository }}:{{ .Values.publicConfig.image.provider.tag }}
        command:
        - /opt/external-dns-volcengine-webhook
        args:
        - start
        - --port=8888
        - --debug={{ .Values.userConfig.args.provider.enableDebug }}
        env:
        - name: VOLCENGINE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.userConfig.env.provider.secretName }}
              key: access-key
        - name: VOLCENGINE_ACCESS_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.userConfig.env.provider.secretName }}
              key: secret-key
        - name: VOLCENGINE_VPC
          value: {{ .Values.userConfig.env.provider.vpc | quote }}
        - name: VOLCENGINE_REGION
          value: {{ .Values.userConfig.env.provider.region | quote }}
        - name: VOLCENGINE_ENDPOINT
          value: {{ .Values.userConfig.env.provider.endpoint | quote }}
        resources:
          limits:
            memory: {{ .Values.userConfig.Resources.provider.Limits.Memory }}
            cpu: {{ .Values.userConfig.Resources.provider.Limits.Cpu }}
          requests:
            cpu: {{ .Values.userConfig.Resources.provider.Requests.Cpu }}
            memory: {{ .Values.userConfig.Resources.provider.Requests.Memory }} 